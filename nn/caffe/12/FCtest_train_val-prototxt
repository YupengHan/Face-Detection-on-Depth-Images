name: "Depth_Test_Net"

# data layer ---------------------------------- begin
layer {
  name: 'cls_data'
  type: 'Python'
  top: 'cls_img_data'
  top: 'cls_label_data'
  include {
    phase: TRAIN
  }
  python_param {
    module: 'depth_face_cls_data_layer'
    layer: 'DepthFaceClsDataLayer'
    param_str: "{'root_folder':'/home/hanyupeng/Project/ProcessedData/12', 'source':'/home/hanyupeng/Project/ProcessedData/12/trainValid/cls_train.txt', 'batch_size':128, 'shuffle':False, 'blur':False, 'blur_prob':5, 'gaussian_blur_kernel_size':15, 'motion_blur_degree':15, 'rotate':True, 'rotate_range':30, 'color_jitter':False, 'color_jitter_prob':5, 'mirror':True}"
  }
}

layer {
  name: 'cls_data'
  type: 'Python'
  top: 'cls_img_data'
  top: 'cls_label_data'
  include {
    phase: TEST
  }
  python_param {
    module: 'depth_face_cls_data_layer'
    layer: 'DepthFaceClsDataLayer'
    param_str: "{'root_folder':'/home/hanyupeng/Project/ProcessedData/12', 'source':'/home/hanyupeng/Project/ProcessedData/12/trainValid/cls_val.txt', 'batch_size':128, 'shuffle':False, 'blur':False, 'blur_prob':5, 'gaussian_blur_kernel_size':15, 'motion_blur_degree':15, 'rotate':True, 'rotate_range':10, 'color_jitter':False, 'color_jitter_prob':5, 'mirror':True}"
  }
}

layer {
  name: 'roi_data'
  type: 'Python'
  top: 'roi_img_data'
  top: 'roi_label_data'
  include {
    phase: TRAIN
  }
  python_param {
    module: 'depth_face_roi_data_layer'
    layer: 'DepthFaceRoiDataLayer'
    param_str: "{'root_folder':'/home/hanyupeng/Project/ProcessedData/12', 'source':'/home/hanyupeng/Project/ProcessedData/12/trainValid/roi_train.txt', 'batch_size':32, 'shuffle':False, 'blur':False, 'blur_prob':5, 'gaussian_blur_kernel_size':15, 'motion_blur_degree':15, 'rotate':True, 'rotate_range':30, 'color_jitter':False, 'color_jitter_prob':5, 'mirror':True}"
  }
}
layer {
  name: 'roi_data'
  type: 'Python'
  top: 'roi_img_data'
  top: 'roi_label_data'
  include {
    phase: TEST
  }
  python_param {
    module: 'depth_face_roi_data_layer'
    layer: 'DepthFaceRoiDataLayer'
    param_str: "{'root_folder':'/home/hanyupeng/Project/ProcessedData/12', 'source':'/home/hanyupeng/Project/ProcessedData/12/trainValid/roi_val.txt', 'batch_size':32, 'shuffle':False, 'blur':False, 'blur_prob':5, 'gaussian_blur_kernel_size':15, 'motion_blur_degree':15, 'rotate':True, 'rotate_range':10, 'color_jitter':False, 'color_jitter_prob':5, 'mirror':True}"
  }
}

# data layer ---------------------------------- finish

layer {
  name: "data_concat"
  type: "Concat"
  bottom: "cls_img_data"
  bottom: "roi_img_data"
  top: "data_concat"
  concat_param {
    axis: 0
  }
}


layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data_concat"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
} # 10x10
layer: {
  name: "conv1_1/bn"
  type: "BN"
  bottom: "conv1_1"
  top: "conv1_1/bn"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1/bn"
  top: "conv1_1/bn"
}
layer {
  name: "pool1_1"
  type: "Pooling"
  bottom: "conv1_1/bn"
  top: "pool1_1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
} # 5x5
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "data_concat"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 3
	stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
} # 10x10
layer {
  name: "conv1_2/bn"
  type: "BN"
  bottom: "conv1_2"
  top: "conv1_2/bn"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2/bn"
  top: "conv1_2/bn"
}
layer {
  name: "res1"  
  type: "Eltwise"  
  bottom: "pool1_1"
  bottom: "conv1_2/bn"
  top: "res1"  
  eltwise_param {  
    operation: SUM
  }  
} 
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "res1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
	  value: 0
    }
  }
} # 3x3
layer {
  name: "conv2/bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2/bn"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2/bn"
  top: "conv2/bn"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "conv2/bn"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 40
    kernel_size: 3
     weight_filler {
      type: "xavier"
    }
    bias_filler {
	  type: "constant"
      value: 0
    }
  }
} # 1x1
layer {
  name: "conv3/bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3/bn"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3/bn"
  top: "conv3/bn"
}


layer {
  name: "data_slice"
  type: "Slice"
  bottom: "conv3/bn"
  top: "conv3_cls"
  top: "conv3_roi"
  slice_param {
    axis: 0
    slice_point: 128
  }
}

layer {
  name: "ip_cls"
  type: "InnerProduct"
  bottom: "conv3_cls"
  top: "ip_cls"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "cls_loss"
  type: "SoftmaxWithLoss"
  bottom: "ip_cls"
  bottom: "cls_label_data"
  top: "cls_loss"
  #loss_weight: 1
}

layer {
  name: "cls_Acc"
  type: "Accuracy"
  bottom: "ip_cls"
  bottom: "cls_label_data"
  top: "cls_Acc"
  include {
    phase: TEST
  }
}

layer {
  name: "ip_roi"
  type: "InnerProduct"
  bottom: "conv3_roi"
  top: "ip_roi"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "roi_loss"
  type: "SmoothL1Loss"
  bottom: "ip_roi"
  bottom: "roi_label_data"
  top: "roi_loss"
  loss_weight: 2
  smooth_l1_loss_param {
    #margin: 1.0
    threshold: 2.0
  }
}


